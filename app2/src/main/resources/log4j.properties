# info 表示打印info以上的日志级别, KKK 表示输出到控制台的配置，FFF 表示输出到文件的配置
log4j.rootLogger=info,KKK,FFF

# 输出到控制台时候的配置
log4j.appender.KKK=org.apache.log4j.ConsoleAppender
log4j.appender.KKK.Target=System.out
# 采用org.apache.log4j.PatternLayout的风格进行布局
log4j.appender.KKK.layout=org.apache.log4j.PatternLayout
#log4j.appender.KKK.layout.ConversionPattern 设置输出格式
# %d: 时间日期格式
# %p: 日志等级, %-5p, 5调节和后面一个字段的间距大小, 越大间距越大
# %c: 输出日志信息的代码所在的类, %c{1},{}中的数字代表来的层级深度
# %L: 输出日志的代码所在的行数
# %m: 输出指定信息, 就是message
# %n: 输出一个换行符号, linux下是n, windows是rn
log4j.appender.KKK.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
#log4j.appender.C.encoding=gbk

# 输出到文件时候的配置
log4j.appender.FFF=org.apache.log4j.RollingFileAppender
log4j.appender.FFF.File=LLLogs2/log.log
# 日志大小超过5mb就分一个新文件
log4j.appender.FFF.MaxFileSize=5MB
# 最大保存的最新的日志份数, 11份, 后缀从1到10, 还有一个最新的没有后缀的
log4j.appender.FFF.MaxBackupIndex=10
log4j.appender.FFF.layout=org.apache.log4j.PatternLayout
log4j.appender.FFF.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
#log4j.appender.C.encoding=gbk